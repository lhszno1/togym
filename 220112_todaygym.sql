-- TODAY_GYM 테이블 삭제--
-- MEMBER_TB 삭제
DROP TABLE MEMBER_TB CASCADE CONSTRAINTS;
DROP SYNONYM M;

-- PRODUCT_TB 삭제
DROP TABLE PRODUCT_TB CASCADE CONSTRAINTS;
DROP SYNONYM P;

-- OPTION_TB 삭제
DROP TABLE OPTION_TB CASCADE CONSTRAINTS;
DROP SYNONYM O;

-- CART_TB 삭제
DROP TABLE CART_TB CASCADE CONSTRAINTS;
DROP SYNONYM C;
DROP SEQUENCE CART_SEQ;

-- ORDER_TB 삭제
DROP TABLE ORDER_TB CASCADE CONSTRAINTS;
DROP SYNONYM OD;
DROP SEQUENCE ORDER_SEQ;

-- BANK_TB 삭제
DROP TABLE BANK_TB CASCADE CONSTRAINTS;
DROP SYNONYM BK;

-- TICKET_TB 삭제
DROP VIEW TICKETLIST;
DROP VIEW TICKETLIST_1;
DROP TABLE TICKET_TB CASCADE CONSTRAINTS;
DROP SYNONYM T;
DROP SEQUENCE TICKET_SEQ;

-- REVIEW_TB 삭제
DROP TABLE REVIEW_TB CASCADE CONSTRAINTS;
DROP SYNONYM R;
DROP SEQUENCE REVIEW_SEQ;
DROP VIEW RE_VIEW;
DROP VIEW RV_VIEW_1;

-- RIMG_TB 삭제
DROP TABLE RIMG_TB CASCADE CONSTRAINTS;
DROP SYNONYM RI;
DROP SEQUENCE RIMG_SEQ;

-- SPOT_TB 삭제
DROP TABLE SPOT_TB CASCADE CONSTRAINTS;
DROP SYNONYM S;

-- SIMG_TB 삭제
DROP TABLE SIMG_TB CASCADE CONSTRAINTS;
DROP SYNONYM SI;
DROP SEQUENCE SIMG_SEQ;

-------------------------------------------------- MEMBER _TB
-- 테이블 생성
CREATE TABLE MEMBER_TB (
    M_ID	NVARCHAR2(20) NOT NULL,
    M_PW	NVARCHAR2(100) NOT NULL,
    M_NAME	NVARCHAR2(10) NOT NULL,
    M_EMAIL	NVARCHAR2(50) NOT NULL,
    M_PHONE	NVARCHAR2(11) NOT NULL,
    M_BIRTH	NVARCHAR2(10) NOT NULL,
    M_JOINDATE DATE DEFAULT SYSDATE NOT NULL,
    M_LEVEL	NUMBER DEFAULT 0 NOT NULL
    
    );

-- 동의어 생성
CREATE SYNONYM M FOR MEMBER_TB;

-- 기본키 생성
ALTER TABLE MEMBER_TB
ADD CONSTRAINT PK_M_ID PRIMARY KEY(M_ID);

-------------------------------------------------- OPTION_TB
-- 테이블 생성
CREATE TABLE OPTION_TB (
    O_CODE NVARCHAR2(20) NOT NULL,   
    O_MONTH NVARCHAR2(50) NULL,
    O_PRICE NUMBER NULL,
    P_CODE NVARCHAR2(20) NOT NULL
);
-- 동의어 생성
CREATE SYNONYM O FOR OPTION_TB;

-- 기본키 생성
ALTER TABLE OPTION_TB
ADD CONSTRAINT PK_O_CODE PRIMARY KEY(O_CODE);

-- 데이터 생성
--헬스 가격옵션추가
INSERT INTO O VALUES('p01', '1개월', '100000', 'h01');
INSERT INTO O VALUES('p02', '3개월', '300000', 'h01');
INSERT INTO O VALUES('p03', '6개월', '600000', 'h01');
INSERT INTO O VALUES('p04', '12개월', '1200000', 'h01');

INSERT INTO O VALUES('p05', '1개월', '400000', 'h02');
INSERT INTO O VALUES('p06', '3개월', '1200000', 'h02');
INSERT INTO O VALUES('p07', '6개월', '2400000', 'h02');
INSERT INTO O VALUES('p08', '12개월', '4800000', 'h02');

INSERT INTO O VALUES('p09', '1개월', '200000', 'h03');
INSERT INTO O VALUES('p10', '3개월', '600000', 'h03');
INSERT INTO O VALUES('p11', '6개월', '1200000', 'h03');
INSERT INTO O VALUES('p12', '12개월', '2400000', 'h03');

INSERT INTO O VALUES('p13', '1개월', '300000', 'h04');
INSERT INTO O VALUES('p14', '3개월', '900000', 'h04');
INSERT INTO O VALUES('p15', '6개월', '1800000', 'h04');
INSERT INTO O VALUES('p16', '12개월', '3600000', 'h04');

--수영 가격옵션 추가
INSERT INTO O VALUES('p17', '1개월', '100000', 's01');
INSERT INTO O VALUES('p18', '3개월', '300000', 's01');
INSERT INTO O VALUES('p19', '6개월', '600000', 's01');
INSERT INTO O VALUES('p20', '12개월', '1200000', 's01');

INSERT INTO O VALUES('p21', '1개월', '200000', 's02');
INSERT INTO O VALUES('p22', '3개월', '600000', 's02');
INSERT INTO O VALUES('p23', '6개월', '1200000', 's02');
INSERT INTO O VALUES('p24', '12개월', '2400000', 's02');

INSERT INTO O VALUES('p25', '1개월', '300000', 's03');
INSERT INTO O VALUES('p26', '3개월', '900000', 's03');
INSERT INTO O VALUES('p27', '6개월', '1800000', 's03');
INSERT INTO O VALUES('p28', '12개월', '3600000', 's03');

INSERT INTO O VALUES('p29', '1개월', '400000', 's04');
INSERT INTO O VALUES('p30', '3개월', '1200000', 's04');
INSERT INTO O VALUES('p31', '6개월', '2400000', 's04');
INSERT INTO O VALUES('p32', '12개월', '4800000', 's04');
--클라이밍 가격옵션 추가
INSERT INTO O VALUES('p33', '1개월', '100000', 'cb01');
INSERT INTO O VALUES('p34', '3개월', '300000', 'cb01');
INSERT INTO O VALUES('p35', '6개월', '600000', 'cb01');
INSERT INTO O VALUES('p36', '12개월', '1200000', 'cb01');

INSERT INTO O VALUES('p37', '1개월', '200000', 'cb02');
INSERT INTO O VALUES('p38', '3개월', '600000', 'cb02');
INSERT INTO O VALUES('p39', '6개월', '1200000', 'cb02');
INSERT INTO O VALUES('p40', '12개월', '2400000', 'cb02');

INSERT INTO O VALUES('p41', '1개월', '300000', 'cb03');
INSERT INTO O VALUES('p42', '3개월', '900000', 'cb03');
INSERT INTO O VALUES('p43', '6개월', '1800000', 'cb03');
INSERT INTO O VALUES('p44', '12개월', '3600000', 'cb03');

INSERT INTO O VALUES('p45', '1개월', '400000', 'cb04');
INSERT INTO O VALUES('p46', '3개월', '1200000', 'cb04');
INSERT INTO O VALUES('p47', '6개월', '2400000', 'cb04');
INSERT INTO O VALUES('p48', '12개월', '4800000', 'cb04');
--크로스핏 가격옵션 추가
INSERT INTO O VALUES('p49', '1개월', '100000', 'cs01');
INSERT INTO O VALUES('p50', '3개월', '300000', 'cs01');
INSERT INTO O VALUES('p51', '6개월', '600000', 'cs01');
INSERT INTO O VALUES('p52', '12개월', '1200000', 'cs01');

INSERT INTO O VALUES('p53', '1개월', '200000', 'cs02');
INSERT INTO O VALUES('p54', '3개월', '600000', 'cs02');
INSERT INTO O VALUES('p55', '6개월', '1200000', 'cs02');
INSERT INTO O VALUES('p56', '12개월', '2400000', 'cs02');

INSERT INTO O VALUES('p57', '1개월', '300000', 'cs03');
INSERT INTO O VALUES('p58', '3개월', '900000', 'cs03');
INSERT INTO O VALUES('p59', '6개월', '1800000', 'cs03');
INSERT INTO O VALUES('p60', '12개월', '3600000', 'cs03');

INSERT INTO O VALUES('p61', '1개월', '400000', 'cs04');
INSERT INTO O VALUES('p62', '3개월', '1200000', 'cs04');
INSERT INTO O VALUES('p63', '6개월', '2400000', 'cs04');
INSERT INTO O VALUES('p64', '12개월', '4800000', 'cs04');

-------------------------------------------------- PRODUCT_TB
-- 테이블 생성
CREATE TABLE PRODUCT_TB (
    P_CODE NVARCHAR2(50) NOT NULL,
    P_CATE NVARCHAR2(50) NOT NULL,
    P_SUBCATE NVARCHAR2(50)NOT NULL,
    P_IMG NVARCHAR2(50) NOT NULL
);
-- 동의어 생성
CREATE SYNONYM P FOR PRODUCT_TB;

-- 기본키 생성
ALTER TABLE PRODUCT_TB
ADD CONSTRAINT PK_P_CODE PRIMARY KEY(P_CODE);

-- 데이터 생성
--PRODUCT_TB(헬스추가)
INSERT INTO p VALUES ('h01', 'HEALTH', '일반이용권', 'resources/img/buy/h1.png');
INSERT INTO p VALUES ('h02', 'HEALTH', '1:1 PT회원권', 'resources/img/buy/h2.png');
INSERT INTO p VALUES ('h03', 'HEALTH', '5:1 PT회원권', 'resources/img/buy/h3.png');
INSERT INTO p VALUES ('h04', 'HEALTH', 'GX 프로그램', 'resources/img/buy/h4.png');
--PRODUCT_TB(수영추가)
INSERT INTO p VALUES ('s01', 'SWIM', '수영장 일반이용권', 'resources/img/buy/s1.jpg');
INSERT INTO p VALUES ('s02', 'SWIM', '수영 초급레슨', 'resources/img/buy/s2.png');
INSERT INTO p VALUES ('s03', 'SWIM', '수영 중급레슨', 'resources/img/buy/s3.jpg');
INSERT INTO p VALUES ('s04', 'SWIM', '수영 고급레슨', 'resources/img/buy/s4.jpg');
--PRODUCT_TB(클라이밍추가)
INSERT INTO p VALUES ('cb01', 'CLIMB', '클라이밍 일반이용권', 'resources/img/buy/cb1.jpg');
INSERT INTO p VALUES ('cb02', 'CLIMB', '클라이밍 초급레슨', 'resources/img/buy/cb2.jpg');
INSERT INTO p VALUES ('cb03', 'CLIMB', '클라이밍 중급레슨', 'resources/img/buy/cb3.jpg');
INSERT INTO p VALUES ('cb04', 'CLIMB', '클라이밍 고급레슨', 'resources/img/buy/cb4.jpg');
--PRODUCT_TB(크로스핏추가)
INSERT INTO p VALUES ('cs01', 'CROSSFIT', '크로스핏 일반이용권', 'resources/img/buy/cs1.jpg');
INSERT INTO p VALUES ('cs02', 'CROSSFIT', '크로스핏 초급레슨', 'resources/img/buy/cs2.jpg');
INSERT INTO p VALUES ('cs03', 'CROSSFIT', '크로스핏 중급레슨', 'resources/img/buy/cs3.jpg');
INSERT INTO p VALUES ('cs04', 'CROSSFIT', '크로스핏 고급레슨', 'resources/img/buy/cs4.jpg');

-------------------------------------------------- CART_TB
-- 테이블 생성
CREATE TABLE CART_TB (
    C_CODE NUMBER NOT NULL,
    M_ID NVARCHAR2(20) NOT NULL,
    P_CODE NVARCHAR2(20) NOT NULL,
    OP_CODE NVARCHAR2(20) NOT NULL
);
-- 동의어 생성
CREATE SYNONYM C FOR CART_TB;

-- 기본키 생성
ALTER TABLE CART_TB
ADD CONSTRAINT PK_C_CODE PRIMARY KEY(C_CODE);

-- 외래키 생성
ALTER TABLE CART_TB
ADD CONSTRAINT FK_M_ID FOREIGN KEY(M_ID)
REFERENCES MEMBER_TB(M_ID);

-- 외래키 생성
ALTER TABLE CART_TB
ADD CONSTRAINT FK_P_CODE FOREIGN KEY(P_CODE)
REFERENCES PRODUCT_TB(P_CODE);

-- 외래키 생성
ALTER TABLE CART_TB
ADD CONSTRAINT FK_C_O_CODE FOREIGN KEY(OP_CODE)
REFERENCES OPTION_TB(O_CODE);

-- CART 시퀀스
CREATE SEQUENCE CART_SEQ
INCREMENT BY 1
START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCYCLE;

-------------------------------------------------- ORDER_TB
-- 테이블 생성
CREATE TABLE ORDER_TB (
    OD_CODE NUMBER NOT NULL,
    M_ID NVARCHAR2(20) NOT NULL,
    C_CODE NUMBER NOT NULL
);
-- 동의어 생성
CREATE SYNONYM OD FOR ORDER_TB;

-- 기본키 생성
ALTER TABLE ORDER_TB
ADD CONSTRAINT PK_OD_CODE PRIMARY KEY(OD_CODE);

-- 외래키 생성
ALTER TABLE ORDER_TB
ADD CONSTRAINT FK_OD_MID FOREIGN KEY(M_ID)
REFERENCES MEMBER_TB(M_ID);

-- 외래키 생성
ALTER TABLE ORDER_TB
ADD CONSTRAINT FK_OD_CCODE FOREIGN KEY(C_CODE)
REFERENCES CART_TB(C_CODE);

-- ORDER 시퀀스
CREATE SEQUENCE ORDER_SEQ
INCREMENT BY 1
START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCYCLE;

-------------------------------------------------- BANK_TB
-- 테이블 생성
CREATE TABLE BANK_TB (
    BK_NO NUMBER NOT NULL,
    BK_ACCOUNT NVARCHAR2(20) NOT NULL,
    BK_PWD NVARCHAR2(20) NOT NULL,
    BK_NAME NVARCHAR2(20) NOT NULL,
    BK_CHECK NUMBER
    
    );

-- 동의어 생성
CREATE SYNONYM BK FOR BANK_TB;

-- 기본키 생성
ALTER TABLE BANK_TB
ADD CONSTRAINT PK_BK_NO PRIMARY KEY(BK_NO);

-------------------------------------------------- TICKET_TB
-- 테이블 생성
CREATE TABLE TICKET_TB (
    T_NO NUMBER NOT NULL,
    M_ID NVARCHAR2(20) NOT NULL,
    P_CODE NVARCHAR2(20) NOT NULL,
    O_CODE NVARCHAR2(20) NOT NULL,
    T_ISSUEDATE DATE DEFAULT SYSDATE NOT NULL,
    T_USE NCHAR(1) DEFAULT 1 NOT NULL
    
    );
    
-- 동의어 생성
CREATE SYNONYM T FOR TICKET_TB;

-- 기본키 생성
ALTER TABLE TICKET_TB
ADD CONSTRAINT PK_T_NO PRIMARY KEY(T_NO);

-- 외래키 생성
ALTER TABLE TICKET_TB
ADD CONSTRAINT FK_T_M_ID FOREIGN KEY(M_ID)
REFERENCES MEMBER_TB(M_ID);

-- 외래키 생성
ALTER TABLE TICKET_TB
ADD CONSTRAINT FK_T_P_CODE FOREIGN KEY(P_CODE)
REFERENCES PRODUCT_TB(P_CODE);

-- 외래키 생성
ALTER TABLE TICKET_TB
ADD CONSTRAINT FK_T_O_CODE FOREIGN KEY(O_CODE)
REFERENCES OPTION_TB(O_CODE);

-- TICKET 시퀀스
CREATE SEQUENCE TICKET_SEQ
INCREMENT BY 1
START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCYCLE;

-- TICKETLIST VIEW 생성
CREATE OR REPLACE VIEW TICKETLIST AS
SELECT A.T_NO, A.M_ID, A.T_ISSUEDATE, A.T_USE, B.M_NAME, C.P_IMG, C.P_CATE, C.P_SUBCATE, D.O_MONTH
FROM TICKET_TB A, MEMBER_TB B, PRODUCT_TB C, OPTION_TB D
WHERE A.M_ID = B.M_ID AND A.P_CODE = C.P_CODE AND A.O_CODE = D.O_CODE
ORDER BY A.T_ISSUEDATE DESC;

-- TICKETLIST_1 VIEW 생성
CREATE OR REPLACE VIEW TICKETLIST_1 AS
SELECT ROWNUM AS RONUM, T_NO, M_ID, T_ISSUEDATE, T_USE, M_NAME, P_IMG, P_CATE, P_SUBCATE, O_MONTH
FROM TICKETLIST;

-------------------------------------------------- REVIEW_TB
-- 테이블 생성
CREATE TABLE REVIEW_TB (
    R_NO NUMBER NOT NULL, 
    R_CATE  NVARCHAR2(10) NOT NULL,
    R_TITLE NVARCHAR2(20) NOT NULL,
    R_CONTENTS NCLOB NOT NULL,
    M_ID NVARCHAR2(20) NOT NULL,
    R_DATE DATE NOT NULL,
    R_SCORE NUMBER NOT NULL
    
    );
    
-- 동의어 생성
CREATE SYNONYM R FOR REVIEW_TB;

-- 기본키 생성
ALTER TABLE REVIEW_TB
ADD CONSTRAINT PK_R_NO PRIMARY KEY(R_NO);

-- 외래키 생성
ALTER TABLE REVIEW_TB
ADD CONSTRAINT FK_R_M_ID FOREIGN KEY(M_ID)
REFERENCES MEMBER_TB(M_ID);

-- 리뷰 시퀀스
CREATE SEQUENCE REVIEW_SEQ
INCREMENT BY 1
START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCYCLE;

--뷰
CREATE OR REPLACE VIEW RE_VIEW AS
SELECT R.R_NO,
       R.R_CATE,
       R.R_TITLE,
       R.R_CONTENTS,
       M.M_ID,
       R.R_DATE,
       R.R_SCORE
FROM R INNER JOIN M
ON M.M_ID=M.M_ID
ORDER BY R.R_DATE DESC;

CREATE OR REPLACE VIEW RV_VIEW_1 AS
SELECT ROWNUM AS RONUM, R_NO,R_CATE,R_TITLE,R_CONTENTS,M_ID,R_DATE,R_SCORE
FROM RE_VIEW;

-------------------------------------------------- RIMG_TB
-- 테이블 생성
CREATE TABLE RIMG_TB (
    RIMG_NO NUMBER NOT NULL,
    R_NO NUMBER NOT NULL,
    RIMG_ORI NVARCHAR2(500) NOT NULL,
    RIMG_SYS NVARCHAR2(500) NOT NULL
    
    );

-- 동의어 생성
CREATE SYNONYM RI FOR RIMG_TB;

-- 기본키 생성
ALTER TABLE RIMG_TB
ADD CONSTRAINT PK_RIMG_NO PRIMARY KEY(RIMG_NO);

-- 외래키 생성
ALTER TABLE RIMG_TB
ADD CONSTRAINT FK_R_NO FOREIGN KEY(R_NO)
REFERENCES REVIEW_TB(R_NO);

-- 리뷰 이미지 시퀀스
CREATE SEQUENCE RIMG_SEQ
INCREMENT BY 1
START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCYCLE;

-------------------------------------------------- SPOT_TB
-- 테이블 생성
CREATE TABLE SPOT_TB (
    S_CODE NVARCHAR2(20) NOT NULL,
    S_NAME NVARCHAR2(20) NOT NULL,
    S_PHONE NVARCHAR2(11) NOT NULL,
    S_ADDR NVARCHAR2(50) NOT NULL,
    S_CONTENT NCLOB
    
);

-- 동의어 생성
CREATE SYNONYM S FOR SPOT_TB;

-- 기본키 생성
ALTER TABLE SPOT_TB
ADD CONSTRAINT PK_S_CODE PRIMARY KEY(S_CODE);

-------------------------------------------------- SIMG_TB
-- 테이블 생성
CREATE TABLE SIMG_TB(
    SIMG_NO NUMBER NOT NULL,
    S_CODE NVARCHAR2(20) NOT NULL,
    SIMG_ORI NVARCHAR2(500) NOT NULL,
    SIMG_SYS NVARCHAR2(500) NOT NULL
    
    );

-- 동의어 생성
CREATE SYNONYM SI FOR SIMG_TB;

-- 기본키 생성
ALTER TABLE SIMG_TB
ADD CONSTRAINT PK_SIMG_NO PRIMARY KEY(SIMG_NO);

-- 외래키 생성
ALTER TABLE SIMG_TB
ADD CONSTRAINT FK_S_CODE FOREIGN KEY(S_CODE)
REFERENCES SPOT_TB(S_CODE);

-- 지점 이미지 시퀀스
CREATE SEQUENCE SIMG_SEQ
INCREMENT BY 1
START WITH 1 MINVALUE 1 MAXVALUE 1000 NOCYCLE;




COMMIT;



